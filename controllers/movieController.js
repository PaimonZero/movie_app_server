const Movie = require("../models/MovieModel");

// üìå T·∫°o phim m·ªõi
exports.createMovie = async (req, res) => {
    try {
        const movie = await Movie.create(req.body);
        res.status(201).json(movie);
    } catch (err) {
        res.status(500).json({ message: "L·ªói t·∫°o phim", error: err });
    }
};

// üìå L·∫•y t·∫•t c·∫£ phim
exports.getAllMovies = async (req, res) => {
    try {
        const movies = await Movie.find();
        res.json(movies);
    } catch (err) {
        res.status(500).json({ message: "L·ªói l·∫•y phim", error: err });
    }
};

// üìå L·∫•y 1 phim theo ID
exports.getMovieById = async (req, res) => {
    try {
        const movie = await Movie.findById(req.params.id);
        if (!movie)
            return res.status(404).json({ message: "Phim kh√¥ng t·ªìn t·∫°i" });
        res.json(movie);
    } catch (err) {
        res.status(500).json({ message: "L·ªói khi l·∫•y phim", error: err });
    }
};

// üìå C·∫≠p nh·∫≠t phim
exports.updateMovie = async (req, res) => {
    try {
        const updated = await Movie.findByIdAndUpdate(req.params.id, req.body, {
            new: true,
        });
        if (!updated)
            return res.status(404).json({ message: "Phim kh√¥ng t·ªìn t·∫°i" });
        res.json(updated);
    } catch (err) {
        res.status(500).json({ message: "L·ªói c·∫≠p nh·∫≠t phim", error: err });
    }
};

// üìå Xo√° phim
exports.deleteMovie = async (req, res) => {
    try {
        const deleted = await Movie.findByIdAndDelete(req.params.id);
        if (!deleted)
            return res.status(404).json({ message: "Phim kh√¥ng t·ªìn t·∫°i" });
        res.json({ message: "ƒê√£ xo√° phim" });
    } catch (err) {
        res.status(500).json({ message: "L·ªói xo√° phim", error: err });
    }
};
